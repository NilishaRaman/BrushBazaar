{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\crud\\\\react.js (3)\\\\react.js\\\\BrushBazaar\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState(() => {\n    // Initialize cart from localStorage if available\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shipping, setShipping] = useState(10); // Fixed shipping cost\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = product => {\n    setLoading(true);\n    setError(null);\n    try {\n      setCart(prevCart => {\n        const existingItem = prevCart.find(item => item.id === product.id);\n        if (existingItem) {\n          return prevCart.map(item => item.id === product.id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item);\n        } else {\n          return [...prevCart, {\n            ...product,\n            quantity: 1\n          }];\n        }\n      });\n    } catch (err) {\n      setError('Failed to add item to cart');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeFromCart = productId => {\n    setLoading(true);\n    setError(null);\n    try {\n      setCart(prevCart => prevCart.filter(item => item.id !== productId));\n    } catch (err) {\n      setError('Failed to remove item from cart');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateQuantity = (productId, newQuantity) => {\n    setLoading(true);\n    setError(null);\n    try {\n      setCart(prevCart => prevCart.map(item => item.id === productId ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    } catch (err) {\n      setError('Failed to update quantity');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n    localStorage.removeItem('cart');\n  };\n  const getTotalPrice = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      getTotalPrice,\n      loading,\n      error,\n      shipping\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"kl4yRhQeJcfg91fbsFgaWtQCawU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","savedCart","localStorage","getItem","JSON","parse","loading","setLoading","error","setError","shipping","setShipping","setItem","stringify","addToCart","product","prevCart","existingItem","find","item","id","map","quantity","err","removeFromCart","productId","filter","updateQuantity","newQuantity","clearCart","removeItem","getTotalPrice","reduce","total","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["D:/Desktop/crud/react.js (3)/react.js/BrushBazaar/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState(() => {\r\n    // Initialize cart from localStorage if available\r\n    const savedCart = localStorage.getItem('cart');\r\n    return savedCart ? JSON.parse(savedCart) : [];\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [shipping, setShipping] = useState(10); // Fixed shipping cost\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (product) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      setCart((prevCart) => {\r\n        const existingItem = prevCart.find(item => item.id === product.id);\r\n        if (existingItem) {\r\n          return prevCart.map(item =>\r\n            item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n          );\r\n        } else {\r\n          return [...prevCart, { ...product, quantity: 1 }];\r\n        }\r\n      });\r\n    } catch (err) {\r\n      setError('Failed to add item to cart');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      setCart((prevCart) => prevCart.filter((item) => item.id !== productId));\r\n    } catch (err) {\r\n      setError('Failed to remove item from cart');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      setCart((prevCart) =>\r\n        prevCart.map((item) =>\r\n          item.id === productId ? { ...item, quantity: newQuantity } : item\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update quantity');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    localStorage.removeItem('cart');\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cart,\r\n      addToCart,\r\n      removeFromCart,\r\n      updateQuantity,   \r\n      clearCart,\r\n      getTotalPrice,\r\n      loading,\r\n      error,\r\n      shipping,\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}